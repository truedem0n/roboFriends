{"ast":null,"code":"var _jsxFileName = \"/home/skylord/Documents/Projects/robofriends/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport SearchBox from \"../components/SearchBox\";\nimport CardList from \"../components/CardList\"; // import { robots } from \"./robots\";\n\nimport Scroll from \"../components/Scroll\";\nimport { setSearchField } from \"../actions\";\n\nconst mapStateToProps = state => {\n  return {\n    searchField: state.searchField,\n    robots: state.requestRobots.robots,\n    isPending: state.isPending,\n    error: state.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSearchChange: event => dispatch(setSearchField(event.target.value))\n  };\n\n  onRequestRobots: () => dispatch(requestr);\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSearchChange = event => {\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n\n    this.state = {\n      robots: [],\n      searchfield: \"\"\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n\n  render() {\n    const _this$props = this.props,\n          searchField = _this$props.searchField,\n          onSearchChange = _this$props.onSearchChange;\n    console.log(this.props);\n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return React.createElement(\"div\", {\n      className: \"tc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"f-headline-l\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"RoboFriends\"), React.createElement(SearchBox, {\n      searchChange: onSearchChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Scroll, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(CardList, {\n      robots: filteredRobots,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/home/skylord/Documents/Projects/robofriends/src/containers/App.js"],"names":["React","Component","connect","SearchBox","CardList","Scroll","setSearchField","mapStateToProps","state","searchField","robots","requestRobots","isPending","error","mapDispatchToProps","dispatch","onSearchChange","event","target","value","onRequestRobots","requestr","App","constructor","setState","searchfield","componentDidMount","fetch","then","response","json","users","render","props","console","log","filteredRobots","filter","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,cAAT,QAA+B,YAA/B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,WAAW,EAAED,KAAK,CAACC,WADd;AAELC,IAAAA,MAAM,EAACF,KAAK,CAACG,aAAN,CAAoBD,MAFtB;AAGLE,IAAAA,SAAS,EAACJ,KAAK,CAACI,SAHX;AAILC,IAAAA,KAAK,EAACL,KAAK,CAACK;AAJP,GAAP;AAMD,CAPD;;AAQA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLC,IAAAA,cAAc,EAAGC,KAAD,IAAWF,QAAQ,CAACT,cAAc,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAD9B,GAAP;;AAEEC,EAAAA,eAAe,EAAC,MAAIL,QAAQ,CAACM,QAAD,CAAZ;AACnB,CAJD;;AAMA,MAAMC,GAAN,SAAkBrB,SAAlB,CAA4B;AAC1BsB,EAAAA,WAAW,GAAG;AACZ;;AADY,SAYdP,cAZc,GAYIC,KAAD,IAAW;AAC1B,WAAKO,QAAL,CAAc;AAAEC,QAAAA,WAAW,EAAER,KAAK,CAACC,MAAN,CAAaC;AAA5B,OAAd;AAED,KAfa;;AAEZ,SAAKX,KAAL,GAAa;AACXE,MAAAA,MAAM,EAAE,EADG;AAEXe,MAAAA,WAAW,EAAC;AAFD,KAAb;AAID;;AACDC,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKP,QAAL,CAAc;AAAEd,MAAAA,MAAM,EAAEqB;AAAV,KAAd,CAFjB;AAGD;;AAKDC,EAAAA,MAAM,GAAG;AAAA,wBAC4B,KAAKC,KADjC;AAAA,UACAxB,WADA,eACAA,WADA;AAAA,UACYO,cADZ,eACYA,cADZ;AAEPkB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAjB;AAEA,UAAMG,cAAc,GAAG,KAAK5B,KAAL,CAAWE,MAAX,CAAkB2B,MAAlB,CAAyB3B,MAAM,IAAI;AACxD,aAAOA,MAAM,CAAC4B,IAAP,CAAYC,WAAZ,GAA0BC,QAA1B,CAAmC/B,WAAW,CAAC8B,WAAZ,EAAnC,CAAP;AACD,KAFsB,CAAvB;AAGA,WACE;AAAK,MAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,SAAD;AAAW,MAAA,YAAY,EAAEvB,cAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAEoB,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,CADF;AASD;;AAjCyB;;AAqC5B,eAAelC,OAAO,CAACK,eAAD,EAAiBO,kBAAjB,CAAP,CAA4CQ,GAA5C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { connect } from \"react-redux\";\nimport SearchBox from \"../components/SearchBox\";\nimport CardList from \"../components/CardList\";\n\n// import { robots } from \"./robots\";\nimport Scroll from \"../components/Scroll\"\nimport { setSearchField } from \"../actions\"\n\nconst mapStateToProps = (state) => {\n  return {\n    searchField: state.searchField,\n    robots:state.requestRobots.robots,\n    isPending:state.isPending,\n    error:state.error\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return { \n    onSearchChange: (event) => dispatch(setSearchField(event.target.value)) }\n    onRequestRobots:()=>dispatch(requestr)\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      robots: [],\n      searchfield:\"\"\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then(response => response.json())\n      .then(users => this.setState({ robots: users }))\n  }\n  onSearchChange = (event) => {\n    this.setState({ searchfield: event.target.value })\n\n  }\n  render() {\n    const {searchField,onSearchChange}=this.props;\n    console.log(this.props)\n    \n    const filteredRobots = this.state.robots.filter(robots => {\n      return robots.name.toLowerCase().includes(searchField.toLowerCase());\n    })\n    return (\n      <div className=\"tc\">\n        <h1 className=\"f-headline-l\">RoboFriends</h1>\n        <SearchBox searchChange={onSearchChange} />\n        <Scroll>\n          <CardList robots={filteredRobots} />\n        </Scroll>\n      </div>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}